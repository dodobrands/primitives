name: Pull request
on:
  pull_request:
    branches:
      - main
jobs:
  compare-version:
    name: Compare versions in current branch and main
    runs-on: ubuntu-20.04
    if: ${{ !contains(github.event.commits[0].message, '[skip ci]') }}
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - name: Checkout source branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
      - name: Get source branch version
        id: source-version
        shell: bash
        run: |
          version_prefix=$(cat ./src/Directory.Build.props | grep "<VersionPrefix>" | sed -e "s/ *<\/*VersionPrefix>//g")
          version_suffix=$(cat ./src/Directory.Build.props | grep "<VersionSuffix>" | sed -e "s/ *<\/*VersionSuffix>//g")
          echo "Package version prefix: $version_prefix"
          echo "Package version suffix: $version_suffix"
          if [ -z "${version_prefix// }" ]; then exit 1; fi
          version_with_suffix="${version_prefix}"
          has_suffix="false"
          if [ ! -z "${version_suffix// }" ]
          then
              version_with_suffix="${version_prefix}-${version_suffix}"
              has_suffix="true"
          fi
          echo "::set-output name=version_with_suffix::$version_with_suffix"
          echo "::set-output name=has_suffix::$has_suffix"
      - name: Checkout target branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
      - name: Get target branch version
        id: target-version
        shell: bash
        run: |
          version_prefix=$(cat ./src/Directory.Build.props | grep "<VersionPrefix>" | sed -e "s/ *<\/*VersionPrefix>//g")
          version_suffix=$(cat ./src/Directory.Build.props | grep "<VersionSuffix>" | sed -e "s/ *<\/*VersionSuffix>//g")
          echo "Package version prefix: $version_prefix"
          echo "Package version suffix: $version_suffix"
          if [ -z "${version_prefix// }" ]; then exit 1; fi
          version_with_suffix="${version_prefix}"
          has_suffix="false"
          if [ ! -z "${version_suffix// }" ]
          then
              version_with_suffix="${version_prefix}-${version_suffix}"
              has_suffix="true"
          fi
          echo "::set-output name=version_with_suffix::$version_with_suffix"
          echo "::set-output name=has_suffix::$has_suffix"
      - name: Setup .NET Core SDK 6.0.100
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100
      - name: Checkout source branch back
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
      - name: Compare versions
        shell: bash
        run: |
          dotnet publish -c Release ./tools/Dodo.Primitives.Tools.CompareVersions/Dodo.Primitives.Tools.CompareVersions.csproj
          source_more_than_target=$(dotnet ./tools/Dodo.Primitives.Tools.CompareVersions/bin/Release/net6.0/publish/Dodo.Primitives.Tools.CompareVersions.dll "${source_version}" "${target_version}")
          last_exit_code=$(printf "%d" $?)
          source_more_than_target=$(printf "%s" $source_more_than_target)
          if [ "$last_exit_code" -ne 0 ]
          then
            echo "dotnet run status code is ${last_exit_code}"
            exit 1
          fi
          if (( "$source_more_than_target" >= -1 && "$source_more_than_target" <=1 ))
          then
            if (( "$source_more_than_target" == 1 ))
            then
              echo "Version check passed"
            elif (( "$source_more_than_target" == 0 ))
            then
              echo "Source and target versions are same! Expect that source version will be greater than target."
              exit 1
            else
              echo "Target version is bigger than source! Expect that source version will be greater than target."
              exit 1
            fi
          else
            echo "Unexpected range result from version tool. Result is: ${source_more_than_target}"
            exit 1
          fi
        env:
          source_version: ${{ steps.source-version.outputs.version_with_suffix }}
          target_version: ${{ steps.target-version.outputs.version_with_suffix }}
  run-tests:
    name: Run tests
    needs: compare-version
    runs-on: windows-2019
    if: ${{ !contains(github.event.commits[0].message, '[skip ci]') }}
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
      - name: Setup .NET Core SDK 3.1.415
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.415
      - name: Setup .NET Core SDK 5.0.403
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.403
      - name: Setup .NET Core SDK 6.0.100
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100
      - name: Run tests
        shell: pwsh
        run: |
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f net462 /p:CoverletOutput=../../coverage/cover_netstandard20 /p:CoverletOutputFormat=json
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f netcoreapp3.1 /p:CoverletOutput=../../coverage/cover_netcoreapp31 /p:MergeWith=../../coverage/cover_netstandard20.net462.json /p:CoverletOutputFormat=json
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f net5.0 /p:CoverletOutput=../../coverage/cover_net50 /p:MergeWith=../../coverage/cover_netcoreapp31.netcoreapp3.1.json /p:CoverletOutputFormat=json
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f net6.0 /p:MergeWith=../../coverage/cover_net50.net5.0.json /p:CoverletOutput=../../coverage/cover_full /p:CoverletOutputFormat=lcov
      - name: Publish coverage report to coveralls.io
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/cover_full.net6.0.info
