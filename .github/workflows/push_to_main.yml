name: Push to master
on:
    push:
        branches:
            - "main"
jobs:
    validate-version:
        name: Validate package version
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.sha }}
            - name: Validate version
              id: validate-version
              shell: bash
              run: |
                  version_prefix=$(cat ./src/Directory.Build.props | grep "<VersionPrefix>" | sed -e "s/ *<\/*VersionPrefix>//g")
                  version_suffix=$(cat ./src/Directory.Build.props | grep "<VersionSuffix>" | sed -e "s/ *<\/*VersionSuffix>//g")
                  echo "Package version prefix: $version_prefix"
                  echo "Package version suffix: $version_suffix"
                  if [ -z "${version_prefix// }" ]; then exit 1; fi
                  if [ -z "${version_suffix// }" ] && [ $prerelease == "true" ]
                  then
                      exit 1
                  fi
                  version_with_suffix="${version_prefix}"
                  if [ ! -z "${version_suffix// }" ]
                  then
                      version_with_suffix="${version_prefix}-${version_suffix}"
                  fi
                  echo "::set-output name=version_with_suffix::$version_with_suffix"
                  echo "::set-output name=version_suffix::$version_suffix"
    run-tests:
        name: Run tests
        needs: validate-version
        runs-on: ubuntu-22.04
        if: ${{ !contains(github.event.commits[0].message, '[skip ci]') }}
        env:
            DOTNET_NOLOGO: true
            DOTNET_CLI_TELEMETRY_OPTOUT: true
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.sha }}
            - name: Setup .NET Core SDK 6.0.403
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 6.0.403
            - name: Setup .NET Core SDK 7.0.100
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 7.0.100
            - name: Run .NET 6 tests without Hardware Intrinsics
              env:
                  COMPlus_EnableHWIntrinsic: "0"
                  CollectCoverage": "true"
                  CoverletOutputFormat: "json"
                  CoverletOutput: "../../coverage/cover_net6nohw"
              shell: bash
              run: |
                  dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj -f net6.0
            - name: Run .NET 6 tests with Hardware Intrinsics
              env:
                  COMPlus_EnableHWIntrinsic: "1"
                  CollectCoverage": "true"
                  CoverletOutputFormat: "json"
                  CoverletOutput: "../../coverage/cover_net6hw"
                  MergeWith: "../../coverage/cover_net6nohw.net6.0.json"
              shell: bash
              run: |
                  dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj -f net6.0
            - name: Run .NET 7 tests without Hardware Intrinsics
              env:
                  COMPlus_EnableHWIntrinsic: "0"
                  CollectCoverage": "true"
                  CoverletOutputFormat: "json"
                  CoverletOutput: "../../coverage/cover_net7nohw"
                  MergeWith: "../../coverage/cover_net6hw.net6.0.json"
              shell: bash
              run: |
                  dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj -f net7.0
            - name: Run .NET 7 tests with Hardware Intrinsics
              env:
                  COMPlus_EnableHWIntrinsic: "1"
                  CollectCoverage": "true"
                  CoverletOutputFormat: "lcov"
                  CoverletOutput: "../../coverage/cover_full"
                  MergeWith: "../../coverage/cover_net7nohw.net7.0.json"
              shell: bash
              run: |
                  dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj -f net7.0
            - name: Publish coverage report to coveralls.io
              uses: coverallsapp/github-action@1.1.3
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: ./coverage/cover_full.net7.0.info
    release:
        name: Create release
        runs-on: ubuntu-22.04
        needs: run-tests
        if: ${{ !contains(github.event.commits[0].message, '[skip ci]') }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.sha }}
            - name: Extract version
              id: extract-version
              shell: bash
              run: |
                  version_prefix=$(cat ./src/Directory.Build.props | grep "<VersionPrefix>" | sed -e "s/ *<\/*VersionPrefix>//g")
                  version_suffix=$(cat ./src/Directory.Build.props | grep "<VersionSuffix>" | sed -e "s/ *<\/*VersionSuffix>//g")
                  echo "Package version prefix: $version_prefix"
                  echo "Package version suffix: $version_suffix"
                  if [ -z "${version_prefix// }" ]; then exit 1; fi
                  version_with_suffix="${version_prefix}"
                  has_suffix="false"
                  if [ ! -z "${version_suffix// }" ]
                  then
                      version_with_suffix="${version_prefix}-${version_suffix}"
                      has_suffix="true"
                  fi
                  echo "::set-output name=version_with_suffix::$version_with_suffix"
                  echo "::set-output name=has_suffix::$has_suffix"
            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.extract-version.outputs.version_with_suffix }}
                  release_name: Release ${{ steps.extract-version.outputs.version_with_suffix }}
                  draft: true
                  prerelease: ${{ steps.extract-version.outputs.has_suffix }}

