name: Release
on:
  release:
    types: [published]
jobs:
  build-test-and-publish:
    name: Build and publish library to NuGet
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}
      - name: Setup .NET Core SDK 6.0.100
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100
      - name: Run tests
        run: |
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f net462 /p:CoverletOutput=../../coverage/cover_netstandard20 /p:CoverletOutputFormat=json
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f netcoreapp3.1 /p:CoverletOutput=../../coverage/cover_netcoreapp31 /p:MergeWith=../../coverage/cover_netstandard20.net462.json /p:CoverletOutputFormat=json
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f net5.0 /p:CoverletOutput=../../coverage/cover_net50 /p:MergeWith=../../coverage/cover_netcoreapp31.netcoreapp3.1.json /p:CoverletOutputFormat=json
          dotnet test -c Release ./src/Dodo.Primitives.Tests/Dodo.Primitives.Tests.csproj /p:CollectCoverage=true -f net6.0 /p:MergeWith=../../coverage/cover_net50.net5.0.json /p:CoverletOutput=../../coverage/cover_full /p:CoverletOutputFormat=lcov
      - name: Publish coverage report to coveralls.io
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/cover_full.net6.0.info
      - name: Build and publish library to NuGet
        run: |
          dotnet publish ./src/Dodo.Primitives/Dodo.Primitives.csproj -c Release -f netcoreapp3.1
          dotnet publish ./src/Dodo.Primitives/Dodo.Primitives.csproj -c Release -f netstandard2.0
          dotnet publish ./src/Dodo.Primitives/Dodo.Primitives.csproj -c Release -f net5.0
          dotnet publish ./src/Dodo.Primitives/Dodo.Primitives.csproj -c Release -f net6.0
          dotnet pack -c Release --no-restore --no-build --output out/ ./src/Dodo.Primitives/Dodo.Primitives.csproj
          dotnet nuget push (Get-ChildItem ./out/ -Filter *.nupkg | Select-Object -First 1 | % { $_.FullName }) --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
      - uses: actions/upload-artifact@v2
        with:
          name: NuGet package
          path: out/
  upload-release-assets:
    name: Upload release assets
    runs-on: ubuntu-20.04
    needs: build-test-and-publish
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: NuGet package
          path: out
      - name: Get package
        id: get-package
        run: |
          echo "::set-output name=package::$(ls out/)"
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./out/${{ steps.get-package.outputs.package }}
          asset_name: ${{ steps.get-package.outputs.package }}
          asset_content_type: application/zip
